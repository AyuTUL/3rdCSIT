pipelining:
decompsoing a sequatial process into sub processes with each sub prcess
being executed in a special dedeicated segment that opertes concurrently
with aall other segments
each segment performs partial processing as specified by the way task
is partitioned. result obtained from copmutation in each segment is
transferred to next segment in pipelinle. the final result is obtained
after data has passed through all segments
a1xb1+c1 figure + table

instruction pipeline:
consecutive instructions are read from memory while previous insteructions
are being executed in other segments
instruction,fecth,execute segments overlap and perform simultaneously
fetech instruction from memory
decode instructoiun
calculate effective address
fet operands from memory
execute instruction
store result in proper place

advantages of pipelining:
increased throughput: multiple isntructions are processed simultarnouly,
increasing isntruction execution rate
efficient resource utlizaiton: aech part of processor is doing useful
work in ewaech clock pulse
improved performenace: overall performance iprovse withoutr increasing
no. of prcessor or clock speed
faster instrctuion execution: faster for sequential instruction execuion

priority interrupt:
determines whci interrupt is to eb served first when 2/more requests
are made simultaneouly
determines whcih interrupts are permitted to interrupt computer while
another is ebing serviced
higher priority interrupts can make request wihle servicing lower
prioiry interrupts

polled interrupt:
one common branch attaced for alll interrupts
program takes care of interrupts, starts at branch address and tests(polls)
the interrupt sources in sequence
the orer in which they are tested determines the prioirty of each interuppt
higher priority source is test first, if its interrupt signak is on
,control brances to ISR for this source. otherwise,next lower priotity
source is tested and so on
figure

adv:
simple
low cost as little hardwarre needed

disadv:
for large no. of io device time required to poll them can excedd time
to serve them
slower than vector interrupts since use software

vectored interrupt:
devicse are connected in a chain as shown in figure
device with highest priority is placed in 1st position followed by
lower priority devices
suppose 2/more devices interrupt prcoessor at a time, in response
processor saves its cutrernt status and generates INTA and sends to
highest priority device
if this device generated interrupt, it accepts INTA from porcessor else
itt passes to next device until INTA is accepted by the interrupotign
device
interrupt ve tor address is generated using hardware

adv:
fast as highest priorty interrupt request is identified by hardware
fast as each interrupt source has own interrupt vector to direclty
access its own service routine

disadv:
expensive 

daisy chain:
devices are connectied in a serial chain
interrupt line goes through eeach device in sequence
1st device in chain has highest priority
any device recievse INTACK signal at PI puts VAD on the bus
only the physically closest to CPU device gest INTACK and blocks the rest

adv:
faster than polling as hardware based
simple wiring

disadv:
priorites are fixed, ;less flexible
farthest device may never get servided is high prioty devces are busy

parallel priority interrupt:
all devices are connectedf to prioirty encoder
all interrupt liens are checked simultaneously
encoder indentifies highest priorty reuqest among all dewvices
generates binary code representing device to be serviced

figure:
IEN- set/clear by IEN/IOF
IST- represent unmasked interrupt has occurred
INTACK- enabels buf buffer to load VAD generated by prioty logic
Interrupt Reigster:
each bit from different interrupt soruce,different prioty llevel
each bit can be cleared by program instruction
Mask Register:
associated with interrupt register
each bit can be set/cleared byu uisntruction
priority encoder truth table

adv:
fast and flexible
dyanmically programmable

disadv:
complex
explensive hardward

parity:
whne binary data is transferred through commuinicatoin medium,
external factor may cahgne bit from 0 to 1 vice versa. error detection
code is binary code that detects and corrects error during transmission
parity bit is the extra bit added to message to make total no. of 1s 
even(XOR) or odd(XNOR)
generator: generates parity bit and appends to message in sender sidew
checker: checks parity bit in receiver side and determines if error occir

instructoin format:
layout bits of instruction
in 16 bit format, 3 fields
mode(1)-bit 15 specifies addresing mode (0:direct 1:indirect)
opcode(3)-bit 12-14 speficifes operation for intrcutoin add,multriply,shift
addres(12)-bit 0-11 specifies registers/locations in memory to be used for 
that operation 12bit= 2^12 =4096 unique locations

memory refernce instructoin
I=0; direct addressing
opcaode=D7=000-110
and,and,lda,sta,bun,bsa,isz

register reference
I=0;direct addressing
opcaode=D7=111
cla cle cma cme cir cil inc spa sna sza sze hlt

io reference
I=1;indirect referencing
opcade=D7=111
inp out ski sko ion iof

common bus sytem:
8 registers memory and control unit
path for transfer info between registser and moomery to register
o/p of regusters and memory connected t ocommon bus
s2 s1 s0 control which register/memory bus selects as input
