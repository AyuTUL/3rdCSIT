visible surface detection:
indientfying thoes poarts of scene which are visible form chosen
viewing position

object spac emethod:
efficeint for small no. of objects but diofficult to implement
compares objects nad parts of objects withen scene defintion to
determine which surface as a shiowle should be visible
N objects requier NxN comparision
resoltion of display device is irrelevant

back face:
eleminates polygons facing away from camera,not visible to viewer
bsed on inside outside test
method 1:
a point xyz is inside polygon surface if Ax+By+Cz+D<0
if inside point is along los to surace, polygon is back face
if ABC are constant then varying value of D results in family opf
parallel lines
	if D>0 plane is behind origin(away fro observer)
	if D<0	plane is infront of origin(toward observer)
method 2:
N is nornmal vector to polygon surface with cartersian compoenents ABC
if V is a vector in viewing direction from eye position then polygon
is back face if V.N>0

image space method:
visibilty is decided point by point at each pixel position on proj plane
resultion is needed ofr math caclc

z buffer:
image space approach of visible surface detection
compare surface depth measured along z axis at each pixel position on
projection plane
each surface of a scene is processed separately one point at a time
developed by CAtmull
z coordinate must be normalized o<z<1
0:back clipping plane
1:front clipping plane
each xyz position on polygon corresponds xy on prjection plane
reuquire 2 bufefrs:
z/depth buffer: stores depth values for each pixel position (x,y)
fram/referse hbuffer: stores surafce intesnsity value/ color value
for each pixel position

algorthm:
-initialize depth and refresh buffer for all buffer position x,y
	depth(x,y)=0
	refresh(x,y)=I backgr
		whre Iback is value of backgr intensity
-process each polygon surface in a ascene one at a time
	-calculate depth z for each x,y, position on polygon
	-ifz>depth(x,y)
		depth(x,y)=z
		refresh(x,y)=Isur(x,y)
			where Isur(x,y) is surface internsity at
			pixel position x,y
-after all pixels and surfaces are compared, draw object using
x,y,z depth nad intesnity refresh buffer
-after all surfaces have been procssed, depth bufer contains depth
value for visible surface and refresh buffer contains coresponding
intesity value for those surface
	depth value for surfa ceposition (x,y) is
		z=(-Ax-By-D)/C
	for next position in scanline z' at(x+1,y)
		z'=z-A/c

cohen sutherland:
coordinate system is divided into 9 regions with region code
end points of line ar eassigned region code
region code of aera inside window is compared with end point

parametric curve:
set of eqns that represent a curve
mathematical represntaion of curve where coordinates on curve
are defined by one/more paramers
x=x(u),y=y(u),z=z(u)


bezier curve:
spline generated by using set of onctrol points and polynomial func

-degree is one less than no. of control points
-always passes through 1st and last control points
-contained in convex hull defined by control opints
-convex hull ensures that polynomial smoothly follows control opnits
-blednign function is always posistive and sum is 1
-slope at the beginning of curve is along line joinging 1st 2 control
points and slope at end of line is along ilne joing last 2 opitns

convex hull:
convex polygonal boundary that encloses set of control points
imagine a rubber band is strectched around postion of control poitns
so taht they lie on perimeter or inside hull

wirefram representation:
3d objects are represented as list of straight lines each represented
by end points x1y1z1 and x2y2z2
shows ojly skeletal structure of objects
simple see tyhrough fast less memory basis for solid modeling easy manip
not realistic, ambiguity of orientation,cant model complex curve
not actual solde(no surface/volume) cant calc physical properties like
mass sa vol

blobby objects:
represtn 3d objects who dont maintain fixed shape and change character
in certain motions or close to another objects
molecular structure,water droplets,melting objects,muscle
exhibit blobiness so reffered to as blobby
uesus gasussian density function or quadratic density funcytion

adv: 
represent organic,blood,liquid struict
modeling natural phenomena like water human body
surface proper derived from math eqns

disadv
expensive computatio
special redinrin engine
not supported by most grpahical hardware

polygon table:
type of plygon surface,boundary represnetaion that uses geometric
table and attribute tables
geomtetric:vertex,edge,polygon surface table
vertext table:coordinate vleu for vertex
edge table: edges and pointer to vertex table
surac etable: surface and poitners backto edge table
attribute table: qualitative properties like degree of transparency
surface reflectivity

redndering:
geenratin g2d image from 3d model using computer algorihms

phong shading:
interpoaltion based hsadinf technique to prodcs smooth lighting
interpolate normal vector and apply illumination model to each
surfac epoint
by phong bui tuong more efficient method of polygon redering
require slarge number of computations

algprithm:
determie average unit normal vector at each polygon vefrtex
Nv=sum k=1 to n Nk/|Nk|
	n:no. of surface of polkygon shading that vertec
linearly interpolate vertex nomrlas over surface of polygon
	N=y-y2/y1-y2 N1 + y1-y/y1-y2 N2
Apply illumination model along eaceh sacn line to determine projected 
pixel intersites at surface point

adv:
smooth and realistic highlights
accurate specular reflection than gouraud
better visual quilaity for curved surface

disadv:
compuitatilnally expensie due to per pixel lighting
more complex,slower

intensity attenuation:
grdula decrease in intensity of lgiht as it travles from ligh tsource
used to simulate how real world light behaves over distance to make
scene more realistsic
cause:
distance: farther travel,weaker
absorption,scattering:by particles in absr
 I=I0/Kc+Kld+Kqd2
I=final intersnity at point
I0=initial intesity of light source
d=disatnce from light source to point
Kc=constant attenuation(to prevent compelte darkenes)
Kl=linear attenueation(cnotrl how light faeds linealry)
Kq=quadratic attenuation(smiluaer real world lgiht fall off)

bsp tree:
method of visible surface detection
dividing a 3d scene into 2 parts repeadtedly until certain condition
are satified
-a partitionainig plane is chosen
-objects in scene are split into front and back regions
-process contrinues recursively until each part meets requered condoi
efficiltyn organizes 3d space for redering and collsion detection
helps in visibilty determination

algorithm:
-select polygon P from list
-make node N in bsp tree nad add P to list of polygons at that node
-for each polygon in  list
	-if polygon wholly infront of plane containg P, move polygon
	to list of nodes infron tof P
	-if whoilly behind polane containing P, move to behind P
	-if intersected by plane contaiing P,split into 2p olygons 
	and move behidn and infonrt respectively
	-if lies in plane containg P, add to list at node N
-apply to list of polygons in front of P
-apply behind P

VR:
technoolgy that creates immersive computer genraetd enivironemt that
users can interact with using special deveices like VR headset,glove
and controllers
simulates areal/imaginary world making user fella as if they are 
physically present in digital enviroment

non immersive:
cg envi thaht uesrs interact iwth standard screen like destop laptop
not fully immersive expreiorence but some level of ineration
flight simulatr games,3 modeilng software

fully imersei
complete virtual environent wher euser fell like they are phyiscally
inseide digital workd
speicla hardware like vr hedset,motion tracking sensor,haptic feedba
vr gaming half life alyx,beat saber,training simutakl milityra,
vr meetings

semi immersive:
mor eengaing than non but no fully replace real world like immer
large sreen to create realistic experince
flight training for pilot with multi screen,driving simultaor f1,
mdeical training
